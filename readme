# Node.js Restaurant Food App

A full-stack Node.js RESTful API for managing a restaurant's food service system. This app supports user authentication, restaurant management, food and category management, and more.

## 🚀 Features

* User and Admin Authentication (JWT-based)
* Restaurant creation and management
* Food category management
* Add/edit/delete food items
* Order management
* Role-based access control

## 🛠 Tech Stack

* Node.js
* Express.js
* MongoDB + Mongoose
* JWT (JSON Web Tokens)
* Dotenv
* Postman (for API testing)

## 📁 Folder Structure

```
├── config          # Database configuration
├── controllers     # Request/response logic
├── middlewares     # Middleware functions (auth, admin)
├── models          # Mongoose models
├── routes          # API route definitions (not listed but assumed)
├── server.js       # Entry point
├── .env            # Environment variables
├── package.json    # Project metadata
```

## ⚙️ Installation

1. **Clone the repository**

```bash
git clone https://github.com/your-username/nodejs-resturant-food-app.git
cd nodejs-resturant-food-app
```

2. **Install dependencies**

```bash
npm install
```

3. **Setup environment variables**
   Create a `.env` file in the root with the following:

```env
PORT=5000
MONGO_URI=your_mongodb_connection_string
JWT_SECRET=your_jwt_secret
```

4. **Start the server**

```bash
npm start
```

## 📬 API Endpoints (Examples)

* `POST /api/v1/auth/register` – Register a new user
* `POST /api/v1/auth/login` – Login and receive JWT
* `POST /api/v1/resturant/create` – Create restaurant (admin only)
* `GET /api/v1/food` – Get all food items

## 🧪 Testing

Use Postman or any API testing tool. Make sure to include the JWT in headers for protected routes.

## 🤝 Contributing

Pull requests are welcome. For major changes, please open an issue first.

## 📄 License

MIT License
